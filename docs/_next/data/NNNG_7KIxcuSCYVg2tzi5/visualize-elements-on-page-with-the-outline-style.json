{"pageProps":{"content":"\r\nThe outline property is useful when you want to visualize elements on the page. In the following sample code, we iterate over all the elements and set the `outline` property with a [random hex color](https://1loc.dev/#generate-a-random-hex-color):\r\n\r\n```js\r\nconst randomColor = () => `#${Math.random().toString(16).slice(2, 8).padEnd(6, '0')}`;\r\n\r\n[].forEach.call(document.querySelectorAll('*'), (ele) => (ele.style.outline = `1px solid ${randomColor()}`));\r\n```\r\n\r\nOf course, you will need an opposite command to reset the `outline` property:\r\n\r\n```js\r\n[].forEach.call(document.querySelectorAll('*'), (ele) => ele.style.removeProperty('outline'));\r\n```\r\n\r\nYou can change the selector from `*` to whatever you want to match the set of particular elements, for example:\r\n\r\n```js\r\n// Set the outline for links only\r\n[].forEach.call(\r\n    document.querySelectorAll('a'),\r\n    ...\r\n);\r\n```\r\n","frontMatter":{"title":"Visualize elements on page with the outline style","category":"Trick","date":"2021-02-23 09:59:00 +7","topics":"DOM, JavaScript"},"prevPost":{"slug":"view-print-stylesheets-with-chrome-devtools","title":"View print stylesheets with Chrome DevTools"},"nextPost":{"slug":"watch-a-variable-value-with-live-expressions","title":"Watch a variable's value with live expressions"}},"__N_SSG":true}