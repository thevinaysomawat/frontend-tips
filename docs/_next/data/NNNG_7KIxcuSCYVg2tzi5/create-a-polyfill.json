{"pageProps":{"content":"\r\nDue to the fact that JavaScript APIs have their own specifications, not all the browsers support a particular specification at the same time.\r\nA JavaScript API can be implemented in a browser sooner or later than the other browsers.\r\n\r\nBecause of that, we have to provide a _patch_ version of API to make sure that it still works on browsers that don't support it natively. That kind of patch is called _polyfill_.\r\n\r\nThe following sample code provides a patch for the `startsWith` method which doesn't override the API if it exists:\r\n\r\n```js\r\nif (!String.prototype.startsWith) {\r\n    String.prototype.startsWith = function (searchString) {\r\n        // The implementation\r\n        // return `true` or `false`\r\n    };\r\n}\r\n```\r\n\r\nIf we provide a polyfill as a library, then we can use the following approach:\r\n\r\n```js\r\n// The polyfill implementation\r\nconst startsWithPolyfill = function (searchString) {\r\n    // ...\r\n    // return `true` or `false`\r\n};\r\n\r\nconst startsWith = String.prototype.startsWith || startsWithPolyfill;\r\n\r\n// Export the function\r\nexport default startsWith;\r\n```\r\n","frontMatter":{"title":"Create a polyfill","category":"Tip","date":"2021-03-10 20:00:00 +7","topics":"JavaScript"},"prevPost":{"slug":"create-a-multiline-strings","title":"Create a multiline strings"},"nextPost":{"slug":"create-an-array-with-conditional-elements","title":"Create an array with conditional elements"}},"__N_SSG":true}