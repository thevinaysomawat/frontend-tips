{"pageProps":{"content":"\r\n`instanceof` doesn't work for primitive types.\r\n\r\nIf you want to use `instanceof` all the time, then you can override the behavior of `instanceof` by implementing a static method with the key of `Symbol.hasInstance`.\r\nIn the following code, we create a class called `PrimitiveNumber` that checks if a value is a number:\r\n\r\n```js\r\nclass PrimitiveNumber {\r\n    static [Symbol.hasInstance](value) {\r\n        return typeof value === 'number';\r\n    }\r\n}\r\n\r\n12345 instanceof PrimitiveNumber; // true\r\n'helloworld' instanceof PrimitiveNumber; // false\r\n```\r\n","frontMatter":{"title":"Override the behavior of instanceof","category":"Trick","date":"2021-02-23 09:47:00 +7","topics":"JavaScript"},"prevPost":{"slug":"open-all-links-in-new-tabs","title":"Open all links in new tabs"},"nextPost":{"slug":"pass-an-array-as-function-arguments","title":"Pass an array as function arguments"}},"__N_SSG":true}