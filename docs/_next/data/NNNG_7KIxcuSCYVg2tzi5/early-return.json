{"pageProps":{"content":"\r\nUsing the `if` statement is a common technique to deal with conditional logics. The code flow is split into different branches based on a given logic.\r\n\r\nLet's take a look at a simple function that [suffixes a given hour](https://1loc.dev/#add-am-pm-suffix-to-an-hour) number with _am_ or _pm_. The suffix is determined based on which range the hour belongs to as you can see in the following table:\r\n\r\n| Hour    | With suffix |\r\n| ------- | ----------- |\r\n| 0       | 12am        |\r\n| 1 - 11  | 1am - 11am  |\r\n| 12      | 12pm        |\r\n| 13 - 23 | 1pm - 11pm  |\r\n\r\nAn initial implementation of the function could look like:\r\n\r\n```js\r\nconst suffixAmPm = (hour) => {\r\n    if (hour === 0) {\r\n        return '12am';\r\n    } else {\r\n        if (hour < 12) {\r\n            return `${hour}am`;\r\n        } else {\r\n            if (hour === 12) {\r\n                return '12pm';\r\n            } else {\r\n                return `${hour % 12}pm`;\r\n            }\r\n        }\r\n    }\r\n};\r\n```\r\n\r\nImagine how the code looks like if we use multiple nested `if` statements. It's very hard to follow and maintain. Rather than using `else` or nested `if` statements, the function can return as soon as the condition matches:\r\n\r\n```js\r\nconst fn = (args) => {\r\n    if (condition) {\r\n        return 'foo';\r\n    } else {\r\n        // Long implementation\r\n        return 'bar';\r\n    }\r\n};\r\n\r\n// Better\r\nconst fn = (args) => {\r\n    if (condition) {\r\n        return 'foo';\r\n    }\r\n\r\n    // Long implementation\r\n    // Don't need to wrap within an `else`\r\n    return 'bar';\r\n};\r\n```\r\n\r\nUsing this practice, a new version of the `suffixAmPm` function looks like:\r\n\r\n```js\r\nconst suffixAmPm = (hour) => {\r\n    if (hour === 0) {\r\n        return '12am';\r\n    }\r\n\r\n    if (hour < 12) {\r\n        return `${hour}am`;\r\n    }\r\n\r\n    if (hour === 12) {\r\n        return '12pm';\r\n    }\r\n\r\n    return `${hour % 12}pm`;\r\n};\r\n```\r\n\r\n### See also\r\n\r\n-   [Replace multiple if statements with a lookup table](/replace-multiple-if-statements-with-a-lookup-table.html)\r\n-   [Replace multiple if statements with a single switch statement](/replace-multiple-if-statements-with-a-single-switch-statement.html)\r\n-   [Use Array.includes for multiple conditionals](/use-array-includes-for-multiple-conditionals.html)\r\n","frontMatter":{"title":"Early return","category":"Best practice","date":"2021-03-21 13:42:00 +7","topics":"JavaScript"},"prevPost":{"slug":"do-not-use-submit-to-name-a-submit-button","title":"Do not use submit to name a submit button"},"nextPost":{"slug":"enforce-required-parameters","title":"Enforce required parameters"}},"__N_SSG":true}