{"pageProps":{"content":"\r\nWhen developing a reusable component, we should follow the rule: the component should look like the same regardless where it's placed.\r\n\r\nFor example, the `margin` style in the following CSS is used for a specific use case where we want to have a space between `.item` and its sibling element.\r\n\r\n```css\r\n.item {\r\n    margin: 1rem 0;\r\n\r\n    /* Other styles */\r\n    ...;\r\n}\r\n```\r\n\r\nIt isn't recommended because it could be broken when you use `item` in another container. Instead, you should use a wrapper to separate the styles of element and its container:\r\n\r\n```css\r\n.item-wrapper {\r\n    margin: 1rem 0;\r\n}\r\n```\r\n\r\nThe `item` class can be reused in different places without breaking the look and feel:\r\n\r\n```html\r\n<div class=\"item-wrapper\">\r\n    <div class=\"item\">...</div>\r\n</div>\r\n\r\n<!-- Used in another wrapper -->\r\n<div class=\"other-wrapper\">\r\n    <div class=\"item\">...</div>\r\n</div>\r\n```\r\n","frontMatter":{"title":"Don't mix styles of an element with its container","category":"Best practice","date":"2021-05-12 19:26:00 +7","topics":"CSS","metadata":{"image":"do-not-mix-styles.png"}},"prevPost":{"slug":"do-not-add-custom-methods-to-primitive-objects","title":"Do not add custom methods to primitive objects"},"nextPost":{"slug":"do-not-use-magic-numbers-when-manipulating-strings","title":"Do not use magic numbers when manipulating strings"}},"__N_SSG":true}