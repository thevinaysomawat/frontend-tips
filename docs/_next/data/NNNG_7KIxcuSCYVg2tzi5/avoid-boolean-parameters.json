{"pageProps":{"content":"\r\nLet's consider a situation where we have a function that writes a string to a file. It allows user to append the content to file, or override the content via the `override` parameter:\r\n\r\n```js\r\nconst writeToFile = (content: string, file: string, override: boolean) => {\r\n...\r\n};\r\n```\r\n\r\nWith that signature, the function will be invoked as following\r\n\r\n```js\r\n// Append the content to file\r\nwriteToFile(content, file, true);\r\n\r\n// Override the file\r\nwriteToFile(content, file, false);\r\n```\r\n\r\nIf you are not the one who creates the function, you have to question what the boolean value represents until looking at the implementation.\r\n\r\nIt is worse if the function has a lot of boolean flags. Using boolean flags makes the core harder to read and maintain.\r\n\r\nThere are a few ways to get rid of the issue.\r\n\r\n### Provide explicit methods\r\n\r\n```js\r\nappendToFile(content, file);\r\noverrideFile(content, file);\r\n```\r\n\r\n### Use an object parameter\r\n\r\n```js\r\nwriteToFile(content, file, { override });\r\n```\r\n\r\n### Use an enum\r\n\r\nIf you're using TypeScript, then you can use `enum` to represent the possible values of a boolean flag.\r\n\r\n```js\r\nenum SaveMode {\r\n  Append,\r\n  Override,\r\n}\r\n\r\nwriteToFile(content, file, mode: SaveMode);\r\n```\r\n\r\nIt's confident for consumers to call the method:\r\n\r\n```js\r\nwriteToFile(content, file, SaveMode.Append);\r\n\r\n// Or\r\nwriteToFile(content, file, SaveMode.Override);\r\n```\r\n\r\n### See also\r\n\r\n-   [Manage multiple boolean flags](/manage-multiple-boolean-flags.html)\r\n","frontMatter":{"title":"Avoid boolean parameters","category":"Best practice","date":"2021-05-13 20:17:00 +7","topics":"JavaScript","metadata":{"image":"avoid-boolean-parameters.png"}},"prevPost":{"slug":"append-leading-zeros-to-ordered-list-items","title":"Append leading zeros to ordered list items"},"nextPost":{"slug":"avoid-invisible-text-when-loading-a-font","title":"Avoid invisible text when loading a font"}},"__N_SSG":true}