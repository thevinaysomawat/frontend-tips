{"pageProps":{"content":"\r\nAccording to the [HTML specifications](https://html.spec.whatwg.org/multipage/dom.html#the-id-attribute), a valid `id` can consist of almost characters except [ASCII whitespace](https://infra.spec.whatwg.org/#ascii-whitespace).\r\nAssume that we have an element representing an user's email address:\r\n\r\n```html\r\n<div id=\"user.email\" />\r\n```\r\n\r\nIn order to access the element, the `getElementById()` method accepts all of three ways passing the `id`:\r\n\r\n```js\r\n// They return the same element\r\ndocument.getElementById('user.email');\r\ndocument.getElementById('user\\\\.email');\r\ndocument.getElementById('user\\\\\\\\.email');\r\n```\r\n\r\nBut these methods return different results if you are using [jQuery](https://jquery.com) library:\r\n\r\n```js\r\n// Function\t\t\t\t// Returned element\r\n$('#user.email'); // <div id=\"user\" class=\"email\" />\r\n$('#user\\\\.email'); // <div id=\"user\" class=\"email\" />\r\n$('#user\\\\\\\\.email'); // <div id=\"user.email\" />\r\n```\r\n\r\nAs you see, the first two methods will find an element with `id` of `user` and has `email` class.\r\nIn order to get the correct element, we have to escape the `id` using double backslashes (`\\\\`). It also happens if we use the same value in CSS:\r\n\r\n```css\r\n#user.email {\r\n    ...;\r\n}\r\n```\r\n\r\nAll the styles declared within `#user.email { ... }` has effect on the element with `id` of `user` and has the `email` class.\r\n\r\nThe styles aren't applied to element with `id` of `user.email`. To define the styles for our element, we have to escape the selector.\r\nBut this time, it requires a _single_ backslash only:\r\n\r\n```css\r\n#user\\\\.email {\r\n    ...;\r\n}\r\n```\r\n\r\nAvoid using the special characters in the `id` and `class` attributes will help us get rid of the confusion and errors above.\r\nIf it's not possible to get rid of colons and periods (for example, the `id` attribute is generated by the server side), then you can use the single backslash as above, or use the attribute selector.\r\nNote that it has a lower specificity than the `id` selector:\r\n\r\n```css\r\n[id='user.email'] {\r\n    ...;\r\n}\r\n```\r\n\r\n### See also\r\n\r\n-   [Do not use submit to name a submit button](/do-not-use-submit-to-name-a-submit-button.html)\r\n","frontMatter":{"title":"Avoid to use colons and periods in the id attribute","category":"Best practice","date":"2021-02-23 09:54:00 +7","topics":"DOM, HTML"},"prevPost":{"slug":"avoid-skipping-heading-levels","title":"Avoid skipping heading levels"},"nextPost":{"slug":"avoid-using-css-import","title":"Avoid using CSS @import"}},"__N_SSG":true}