{"pageProps":{"content":"\r\nWhen transforming a given variable to the JSON representation, we might see unexpected results if the variable contains an unserializable property.\r\n\r\nLet's consider a simple object that represents the information of a person. It has the `phones` property that is a set of different phone numbers.\r\n\r\n```js\r\nconst person = {\r\n    name: 'John Doe',\r\n    ages: 42,\r\n    phones: new Set(['123', '456', '789']),\r\n};\r\n```\r\n\r\nThe set is transformed to an empty object which is unexpected output:\r\n\r\n```js\r\nJSON.stringify(person);\r\n\r\n// \"{\"name\":\"John Doe\",\"ages\":42,\"phones\":{}}\"\r\n```\r\n\r\nWe can solve the issue by passing the second parameter to the `stringify` function. It can be a function of two parameters representing the key and value of the current iterated item.\r\n\r\n```js\r\nJSON.stringify(variable, (key, value) => {\r\n    // The return value will be used in final output\r\n\r\n    // If the function returns `undefined`,\r\n    // the item will be excluded from the output\r\n    return ...;\r\n});\r\n```\r\n\r\nHere is how the phone numbers are transformed when we see the `phones` key:\r\n\r\n```js\r\nJSON.stringify(person, (key, value) => (key === 'phones' ? [...value.values()] : value));\r\n\r\n// \"{\"name\":\"John Doe\",\"ages\":42,\"phones\":[\"123\",\"456\",\"789\"]}\"\r\n```\r\n\r\nWant to transform all `Set` values? No problem!\r\n\r\n```js\r\nJSON.stringify(person, (key, value) => (value instanceof Set ? [...value.values()] : value));\r\n```\r\n\r\n### See also\r\n\r\n-   [Log the full object in NodeJS](/log-the-full-object-in-nodejs.html)\r\n-   [Pick given properties from a JSON representation](/pick-given-properties-from-a-json-representation.html)\r\n-   [Pretty format JSON](/pretty-format-json.html)\r\n","frontMatter":{"title":"Transform values from a JSON representation","category":"Tip","date":"2021-04-08 10:12:00 +7","topics":"JavaScript"},"prevPost":{"slug":"track-the-focused-element-with-chrome-devtools","title":"Track the focused element with Chrome DevTools"},"nextPost":{"slug":"trim-the-spaces-before-parsing-a-number","title":"Trim the spaces before parsing a number"}},"__N_SSG":true}