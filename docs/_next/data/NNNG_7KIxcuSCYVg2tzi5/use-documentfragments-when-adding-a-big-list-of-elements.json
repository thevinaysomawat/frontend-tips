{"pageProps":{"content":"\r\nWe often use the `appendChild` method to [add a new element](https://htmldom.dev/append-to-an-element) to a given element:\r\n\r\n```js\r\nconst li = document.createElement('li');\r\nli.innerHTML = 'List item';\r\n\r\n// Append to given list\r\nul.appendChild(li);\r\n```\r\n\r\nWhen a new element is inserted to the page, the browser has to recompute the dimensions of its parent and the parent's child nodes. The process is known as the reflow.\r\nSimilarly, changing the styles of the element might cause a repaint.\r\n\r\nAdding a big list of elements to the document might affect the performance of page because it triggers reflow multiple times:\r\n\r\n```js\r\nfor (let i = 0; i < 100; i++) {\r\n    const li = document.createElement('li');\r\n    li.innerHTML = `List item ${i}`;\r\n    ul.appendChild(li);\r\n}\r\n```\r\n\r\nDepsite the fact that modern browsers make a lot of optimizations including batch updates, it's recommended to use `DocumentFragment` in this case.\r\nWe create a minimal document without parent, and append our elements to it. It doesn't trigger any reflow or repaint because the document fragment hasn't been added to the page yet:\r\n\r\n```js\r\nconst fragment = document.createDocumentFragment();\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n    const li = document.createElement('li');\r\n    li.innerHTML = `List item ${i}`;\r\n    fragment.appendChild(li);\r\n}\r\n```\r\n\r\nFinally, the document fragment is inserted to the page:\r\n\r\n```js\r\nul.appendChild(fragment);\r\n```\r\n\r\nThe reflow is triggered once!\r\n","frontMatter":{"title":"Use DocumentFragments when adding a big list of elements","category":"Best practice","date":"2021-04-28 09:25:00 +7","topics":"DOM, JavaScript","metadata":{"image":"use-documentfragments.png"}},"prevPost":{"slug":"use-css-fallback-properties","title":"Use CSS fallback properties"},"nextPost":{"slug":"use-multiple-ssh-keys-for-different-github-accounts","title":"Use multiple SSH keys for different GitHub accounts"}},"__N_SSG":true}