{"pageProps":{"content":"\r\nIn TypeScript, we often use the relative path to import a particular file. Here is an example of importing multiple files from the `helper` and `services` folder:\r\n\r\n```js\r\nimport { validator } from '../../../helpers/validator';\r\nimport { authService } from '../../../services/authService';\r\n```\r\n\r\nThe disadvantage is that when we change the directory structure, these imports must be updated accordingly. Despite the fact that popular editors such as Visual Studio Code updates the paths automatically, it doesn't ensure that the process works all the time.\r\n\r\nFortunately, TypeScript provides the ability of using the absolute paths. In the TypeScript configuration file, `tsconfig.json`, we can indicate the alias for particular paths under the `paths` property.\r\n\r\nFor example, the following settings will find all imports starting with `@` in the `src` folder:\r\n\r\n```json\r\n{\r\n    \"paths\": {\r\n        \"@/*\": [\"src/*\"]\r\n    }\r\n}\r\n```\r\n\r\n| Import path                | Identical absolute path       |\r\n| -------------------------- | ----------------------------- |\r\n| `@/helpers/validator`      | `src/helpers/validator`       |\r\n| `@/services/authService`   | `src/services/authService`    |\r\n\r\nOur imports can be shorten as following:\r\n\r\n```js\r\nimport { validator } from '@/helpers/validator';\r\nimport { authService } from '@/services/authService';\r\n```\r\n\r\nSome libraries, Angular for instance, follows a specific pattern of directory structure, we can pre-define the path for given folders:\r\n\r\n```json\r\n{\r\n    \"paths\": {\r\n        \"@helpers/*\": [\"src/helpers/*\"],\r\n        \"@models/*\": [\"src/models/*\"],\r\n        \"@services/*\": [\"src/services/*\"]\r\n    }\r\n}\r\n```\r\n\r\nThen the imports of files belonging to these folders can be shorten as below:\r\n\r\n```js\r\nimport { validator } from '@helpers/validator';\r\nimport { userModel } from '@models/user';\r\nimport { authService } from '@services/authService';\r\n```\r\n\r\n### See also\r\n\r\n-   [Shorten import paths in Webpack](/shorten-import-paths-in-webpack.html)\r\n","frontMatter":{"title":"Shorten import paths in TypeScript","category":"Tip","date":"2021-03-16 08:37:00 +7","topics":"TypeScript"},"prevPost":{"slug":"shorten-codes-with-the-comma-operator","title":"Shorten codes with the comma operator"},"nextPost":{"slug":"shorten-import-paths-in-webpack","title":"Shorten import paths in Webpack"}},"__N_SSG":true}