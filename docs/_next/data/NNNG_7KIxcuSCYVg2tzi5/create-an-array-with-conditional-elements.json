{"pageProps":{"content":"\r\nThere are a few ways to initialize an array with conditional elements.\r\n\r\n### Using the `push` function\r\n\r\n```js\r\nconst arr = ['foo', 'bar'];\r\nif (condition) {\r\n    arr.push('fuzz');\r\n}\r\n```\r\n\r\nWe can use the [short-circuits conditionals](/use-short-circuits-conditionals.html) to make it shorter:\r\n\r\n```js\r\ncondition && arr.push('fuzz');\r\n```\r\n\r\n### Using the `concat` function\r\n\r\n```js\r\nconst arr = ['foo', 'bar'].concat(condition ? 'fuzz' : []);\r\n```\r\n\r\nThe `push` and `concat` functions only work if we want to insert the elements at the end of the array.\r\n\r\n### Filtering the falsy values\r\n\r\n```js\r\nconst arr = ['foo', condition ? 'fuzz' : undefined, 'bar'].filter(Boolean);\r\n```\r\n\r\nThe array always inserts new item which can be the new element or `undefined` depending on whether or not the condition matches.\r\nAt the end, the `undefined` items are removed from the array.\r\n\r\nThis approach allows us to insert element at any position, however we have to be careful with [removing the _falsy_ values](https://1loc.dev/#remove-falsy-values-from-array) from the array because the original array can contains the falsy items.\r\n\r\n### Tip: using the spread operator\r\n\r\nBy using the spread operator (`...`), we can create an array with a single expression as following:\r\n\r\n```js\r\nconst arr = ['foo', ...(condition ? ['fuzz'] : []), 'bar'];\r\n```\r\n\r\nThe following code demonstrates a simple use case. It adds a product to the cart on an ecommerce website.\r\n\r\nTo do that, we have to check if the `products` property exists on the `cart` object first. If not, it will create an empty `products`. The conditional elements are the current `products`.\r\n\r\n```js\r\nif (!cart['products']) {\r\n    cart['products'] = [];\r\n}\r\ncart['products'].push(product);\r\n\r\n// Better version\r\ncart['products'] = [...(cart['products'] || []), product];\r\n```\r\n\r\nDo you want to see one more advanced example? The function below uses the spread and [comma operator](/shorten-codes-with-the-comma-operator.html) to [group an array of objects by a key](https://1loc.dev/#group-an-array-of-objects-by-a-key):\r\n\r\n```js\r\nconst groupBy = (arr, key) => arr.reduce((a, i) => ((a[i[key]] = [...(a[i[key]] || []), i]), a), {});\r\n```\r\n","frontMatter":{"title":"Create an array with conditional elements","category":"Tip","date":"2021-03-12 13:33:00 +7","topics":"JavaScript"},"prevPost":{"slug":"create-a-polyfill","title":"Create a polyfill"},"nextPost":{"slug":"create-an-autocomplete-list-with-the-datalist-element","title":"Create an autocomplete list with the datalist element"}},"__N_SSG":true}